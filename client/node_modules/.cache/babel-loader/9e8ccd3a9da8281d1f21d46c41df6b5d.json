{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Shopping Kart\\\\client\\\\src\\\\components\\\\cart\\\\AddToCart.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, Row, Col, Container, Image } from \"react-bootstrap\";\nexport default class AddToCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalEdit: false\n    };\n  }\n\n  render() {\n    const selectedColor = this.props.selectedColor;\n    const selectedSize = this.props.selectedSize;\n    const validateColorSelection = this.props.validateColorSelection;\n    const validateSizeSelection = this.props.validateSizeSelection;\n    const missSizeMsg = this.props.missSizeMsg;\n    const missColorMsg = this.props.missColorMsg;\n    const title = this.props.title;\n    const price = this.props.price;\n    const image = this.props.image;\n    console.log(\"In Add to Cart\", missColorMsg, missSizeMsg, \"title is\", title, \"price is \", price);\n    const color = missSizeMsg.length > 0 || missColorMsg.length > 0 ? \"danger\" : \"success\";\n\n    const toggle = () => validateColorSelection.length < 1 && validateSizeSelection.lenght < 1 ? this.setState({\n      modalEdit: !this.state.modalEdit\n    }) : \"\";\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: color,\n      onClick: () => {\n        selectedSize.length < 1 && validateSizeSelection(\"Please, select a size\");\n        selectedColor.length < 1 && validateColorSelection(\"Please, select a color\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Add to Cart\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Shopping Kart/client/src/components/cart/AddToCart.js"],"names":["React","Component","Button","Modal","Row","Col","Container","Image","AddToCart","constructor","props","state","modalEdit","render","selectedColor","selectedSize","validateColorSelection","validateSizeSelection","missSizeMsg","missColorMsg","title","price","image","console","log","color","length","toggle","lenght","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,SAAlC,EAA6CC,KAA7C,QAA0D,iBAA1D;AAEA,eAAe,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC/CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,KAAKJ,KAAL,CAAWI,aAAjC;AACA,UAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWK,YAAhC;AACA,UAAMC,sBAAsB,GAAG,KAAKN,KAAL,CAAWM,sBAA1C;AACA,UAAMC,qBAAqB,GAAG,KAAKP,KAAL,CAAWO,qBAAzC;AACA,UAAMC,WAAW,GAAG,KAAKR,KAAL,CAAWQ,WAA/B;AACA,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWS,YAAhC;AACA,UAAMC,KAAK,GAAG,KAAKV,KAAL,CAAWU,KAAzB;AACA,UAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWW,KAAzB;AACA,UAAMC,KAAK,GAAG,KAAKZ,KAAL,CAAWY,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CACE,gBADF,EAEEL,YAFF,EAGED,WAHF,EAIE,UAJF,EAKEE,KALF,EAME,WANF,EAOEC,KAPF;AASA,UAAMI,KAAK,GACTP,WAAW,CAACQ,MAAZ,GAAqB,CAArB,IAA0BP,YAAY,CAACO,MAAb,GAAsB,CAAhD,GAAoD,QAApD,GAA+D,SADjE;;AAEA,UAAMC,MAAM,GAAG,MACbX,sBAAsB,CAACU,MAAvB,GAAgC,CAAhC,IAAqCT,qBAAqB,CAACW,MAAtB,GAA+B,CAApE,GACI,KAAKC,QAAL,CAAc;AAAEjB,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,KAAd,CADJ,GAEI,EAHN;;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEa,KADX;AAEE,MAAA,OAAO,EAAE,MAAM;AACbV,QAAAA,YAAY,CAACW,MAAb,GAAsB,CAAtB,IACET,qBAAqB,CAAC,uBAAD,CADvB;AAEAH,QAAAA,aAAa,CAACY,MAAd,GAAuB,CAAvB,IACEV,sBAAsB,CAAC,wBAAD,CADxB;AAED,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAeD;;AAjD8C","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Modal, Row, Col, Container, Image } from \"react-bootstrap\";\r\n\r\nexport default class AddToCart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalEdit: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const selectedColor = this.props.selectedColor;\r\n    const selectedSize = this.props.selectedSize;\r\n    const validateColorSelection = this.props.validateColorSelection;\r\n    const validateSizeSelection = this.props.validateSizeSelection;\r\n    const missSizeMsg = this.props.missSizeMsg;\r\n    const missColorMsg = this.props.missColorMsg;\r\n    const title = this.props.title;\r\n    const price = this.props.price;\r\n    const image = this.props.image;\r\n    console.log(\r\n      \"In Add to Cart\",\r\n      missColorMsg,\r\n      missSizeMsg,\r\n      \"title is\",\r\n      title,\r\n      \"price is \",\r\n      price\r\n    );\r\n    const color =\r\n      missSizeMsg.length > 0 || missColorMsg.length > 0 ? \"danger\" : \"success\";\r\n    const toggle = () =>\r\n      validateColorSelection.length < 1 && validateSizeSelection.lenght < 1\r\n        ? this.setState({ modalEdit: !this.state.modalEdit })\r\n        : \"\";\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant={color}\r\n          onClick={() => {\r\n            selectedSize.length < 1 &&\r\n              validateSizeSelection(\"Please, select a size\");\r\n            selectedColor.length < 1 &&\r\n              validateColorSelection(\"Please, select a color\");\r\n          }}\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}