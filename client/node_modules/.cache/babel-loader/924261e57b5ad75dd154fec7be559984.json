{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Shopping Kart\\\\client\\\\src\\\\components\\\\productList\\\\SizeSelection.js\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nclass SizeSelection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  render() {\n    const {\n      handleSizeSelection,\n      sizesArray,\n      selectedSize,\n      validateSizeSelection\n    } = this.props;\n    const dropDownList = sizesArray.map(x => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      key: x,\n      onClick: () => {\n        return handleSizeSelection(x); // validateSizeSelection(\"valid\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, x));\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      caret: true,\n      outline: true,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Size: \", selectedSize.length > 0 ? selectedSize : \"Click to choose\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, dropDownList));\n  }\n\n}\n\nSizeSelection.propTypes = propTypes;\nexport default SizeSelection;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Shopping Kart/client/src/components/productList/SizeSelection.js"],"names":["PropTypes","React","Component","Dropdown","SizeSelection","constructor","props","toggle","setState","prevState","dropdownOpen","state","render","handleSizeSelection","sizesArray","selectedSize","validateSizeSelection","dropDownList","map","x","length","propTypes"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,MAPmB,GAOV,MAAM;AACb,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,YAAY,EAAE,CAACD,SAAS,CAACC;AADC,OAAL,CAAvB;AAGD,KAXkB;;AAEjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAQDE,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,mBADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKV,KALT;AAMA,UAAMW,YAAY,GAAGH,UAAU,CAACI,GAAX,CAAeC,CAAC,iBACnC,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,eAAON,mBAAmB,CAACM,CAAD,CAA1B,CADa,CACkB;AAChC,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,CANH,CADmB,CAArB;AAUA,wBACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWD,YAA7B;AAA2C,MAAA,MAAM,EAAE,KAAKH,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,KAAK,MAAtB;AAAuB,MAAA,OAAO,MAA9B;AAA+B,MAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACSQ,YAAY,CAACK,MAAb,GAAsB,CAAtB,GAA0BL,YAA1B,GAAyC,iBADlD,CADF,eAIE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBE,YAAhB,CAJF,CADF;AAQD;;AAvCmC;;AA0CtCb,aAAa,CAACiB,SAAd,GAA0BA,SAA1B;AAEA,eAAejB,aAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\n\r\nclass SizeSelection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleSizeSelection,\r\n      sizesArray,\r\n      selectedSize,\r\n      validateSizeSelection\r\n    } = this.props;\r\n    const dropDownList = sizesArray.map(x => (\r\n      <Dropdown.Item\r\n        key={x}\r\n        onClick={() => {\r\n          return handleSizeSelection(x); // validateSizeSelection(\"valid\");\r\n        }}\r\n      >\r\n        {x}\r\n      </Dropdown.Item>\r\n    ));\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <Dropdown.Toggle caret outline color=\"secondary\">\r\n          Size: {selectedSize.length > 0 ? selectedSize : \"Click to choose\"}\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu>{dropDownList}</Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nSizeSelection.propTypes = propTypes;\r\n\r\nexport default SizeSelection;\r\n"]},"metadata":{},"sourceType":"module"}