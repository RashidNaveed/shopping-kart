{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Shopping Kart\\\\client\\\\src\\\\components\\\\auth\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport { Form, FormGroup, Label, Input, Row, Col, Button, FormFeedback, Alert } from \"reactstrap\";\nimport Layout from \"../Layout\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (this.state.errorMessage === \"Password didn't match\") {\n        this.setState({\n          errorMessage: \"\"\n        });\n      }\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const {\n        firstname,\n        lastname,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (firstname === \"\" || lastname === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n        this.setState({\n          errorMessage: \"Required field couldn't be empty\"\n        });\n      } else {\n        if (password === confirmPassword) {\n          axios.put(\"http://localhost:4000/signup\", {\n            firstname,\n            lastname,\n            email,\n            password\n          }).then(res => {\n            console.log(\"response is\", res);\n            this.setState({\n              success: res.data.message\n            });\n          }).catch(err => {\n            // console.log(\"error is\", err.response.data.data);\n            this.setState({\n              error: err.response.data.data\n            }, () => {\n              console.log(\"error is\", this.state.error);\n            });\n            const result = this.state.error.find(err => err.param === \"email\");\n            console.log(\"result is\", result);\n\n            if (result !== undefined) {\n              this.setState({\n                errorMessage: result.msg\n              }, () => {\n                console.log(\"error message is\", this.state.errorMessage);\n              });\n            }\n          });\n        } else {\n          this.setState({\n            errorMessage: \"Password didn't match\"\n          }, () => {\n            console.log(\"error is\", this.state.errorMessage);\n          });\n        }\n      }\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: [],\n      success: \"\",\n      errorMessage: \"\",\n      visible: true\n    };\n  }\n\n  render() {\n    const {\n      firstname,\n      lastname,\n      email,\n      password,\n      confirmPassword,\n      visible\n    } = this.state;\n\n    const onDismiss = () => this.setState({\n      visible: !thi\n    });\n\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"container\",\n      style: {\n        paddingTop: \"80px\",\n        paddingBottom: \"100px\"\n      },\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleFirstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"firstname\",\n      value: firstname,\n      onChange: this.changeHandler,\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleLastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"lastname\",\n      vale: lastname,\n      onChange: this.changeHandler,\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      id: \"exampleEmail\",\n      onChange: this.changeHandler,\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      id: \"examplePassword\",\n      onChange: this.changeHandler,\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleConfirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      id: \"exampleConfirmPassword\",\n      onChange: this.changeHandler,\n      placeholder: \"Confirm Password\",\n      invalid: this.state.errorMessage === \"Password didn't match\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, this.state.errorMessage)))), this.state.errorMessage === \"Required field couldn't be empty\" ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      isOpen: visible,\n      toggle: onDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"(\", this.state.errorMessage, \")\") : \"\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"Sign up\"), \" \\xA0\", /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \" \", \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 40\n      }\n    }, \"login\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Shopping Kart/client/src/components/auth/Signup.js"],"names":["React","Component","Form","FormGroup","Label","Input","Row","Col","Button","FormFeedback","Alert","Layout","axios","Link","Signup","constructor","props","changeHandler","e","setState","target","name","value","state","errorMessage","submitHandler","preventDefault","firstname","lastname","email","password","confirmPassword","put","then","res","console","log","success","data","message","catch","err","error","response","result","find","param","undefined","msg","visible","render","onDismiss","thi","paddingTop","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormFeedback,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport Layout from \"../Layout\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: [],\r\n      success: \"\",\r\n      errorMessage: \"\",\r\n      visible: true,\r\n    };\r\n  }\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (this.state.errorMessage === \"Password didn't match\") {\r\n      this.setState({ errorMessage: \"\" });\r\n    }\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n    if (\r\n      firstname === \"\" ||\r\n      lastname === \"\" ||\r\n      email === \"\" ||\r\n      password === \"\" ||\r\n      confirmPassword === \"\"\r\n    ) {\r\n      this.setState({ errorMessage: \"Required field couldn't be empty\" });\r\n    } else {\r\n      if (password === confirmPassword) {\r\n        axios\r\n          .put(\"http://localhost:4000/signup\", {\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password,\r\n          })\r\n          .then((res) => {\r\n            console.log(\"response is\", res);\r\n            this.setState({ success: res.data.message });\r\n          })\r\n          .catch((err) => {\r\n            // console.log(\"error is\", err.response.data.data);\r\n            this.setState({ error: err.response.data.data }, () => {\r\n              console.log(\"error is\", this.state.error);\r\n            });\r\n            const result = this.state.error.find(\r\n              (err) => err.param === \"email\"\r\n            );\r\n            console.log(\"result is\", result);\r\n            if (result !== undefined) {\r\n              this.setState({ errorMessage: result.msg }, () => {\r\n                console.log(\"error message is\", this.state.errorMessage);\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        this.setState({ errorMessage: \"Password didn't match\" }, () => {\r\n          console.log(\"error is\", this.state.errorMessage);\r\n        });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n      visible,\r\n    } = this.state;\r\n    const onDismiss = () => this.setState({ visible: !thi });\r\n    return (\r\n      <Layout>\r\n        <Form\r\n          className=\"container\"\r\n          style={{ paddingTop: \"80px\", paddingBottom: \"100px\" }}\r\n          onSubmit={this.submitHandler}\r\n        >\r\n          <Row form>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"exampleFirstName\">First Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"firstname\"\r\n                  value={firstname}\r\n                  onChange={this.changeHandler}\r\n                  placeholder=\"First Name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"exampleLastName\">Last Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  vale={lastname}\r\n                  onChange={this.changeHandler}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row form>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  id=\"exampleEmail\"\r\n                  onChange={this.changeHandler}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row form>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"examplePassword\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  id=\"examplePassword\"\r\n                  onChange={this.changeHandler}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label for=\"exampleConfirmPassword\">Confirm Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  id=\"exampleConfirmPassword\"\r\n                  onChange={this.changeHandler}\r\n                  placeholder=\"Confirm Password\"\r\n                  invalid={this.state.errorMessage === \"Password didn't match\"}\r\n                />\r\n                <FormFeedback>{this.state.errorMessage}</FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          {this.state.errorMessage === \"Required field couldn't be empty\" ? (\r\n            <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n              ({this.state.errorMessage})\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row>\r\n            <Button type=\"submit\">Sign up</Button> &nbsp;\r\n            <h6 style={{ marginTop: \"10px\" }}>\r\n              {\" \"}\r\n              Already have an account? <Link to=\"/login\">login</Link>\r\n            </h6>\r\n          </Row>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}