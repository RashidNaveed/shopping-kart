{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Shopping Kart\\\\client\\\\src\\\\components\\\\productList\\\\SizeSelection.js\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nexport default class SizeSelection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sizes: [],\n      handleSizeSelection: \"\",\n      selectedSize: \"\",\n      validateSizeSelection: \"\"\n    };\n  }\n\n  componentDidMount() {// this.setState({ size: this.props.size });\n  }\n\n  render() {\n    console.log(\"props in size\", this.props);\n\n    if (this.props.size) {\n      this.state.sizes = this.props.size;\n      console.log(\"sizes are\", this.state.sizes);\n    } // }\n    // if (this.props.handleSizeSelection) {\n    //   this.state.handleSizeSelection = this.props.handleSizeSelection;\n    // }\n    // if (this.props.selectedSize) {\n    //   this.state.selectedSize = this.props.selectedSize;\n    // }\n    // if (this.props.validateSizeSelection) {\n    //   this.state.validateSizeSelection = this.props.validateSizeSelection;\n    // }\n\n\n    const {\n      handleSizeSelection,\n      selectedSize,\n      validateSizeSelection\n    } = this.props;\n    const dropdown = this.state.sizes.map(size => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      key: size,\n      onClick: () => {\n        return handleSizeSelection(size), validateSizeSelection(\"valid\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, size));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      caret: true,\n      outline: true,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Size:\", \" \", selectedSize.length > 0 ? this.state.selectedSize : \"Click to choose\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, dropdown)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Shopping Kart/client/src/components/productList/SizeSelection.js"],"names":["React","Component","Dropdown","SizeSelection","constructor","props","state","sizes","handleSizeSelection","selectedSize","validateSizeSelection","componentDidMount","render","console","log","size","dropdown","map","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,mBAAmB,EAAE,EAFV;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,qBAAqB,EAAE;AAJZ,KAAb;AAMD;;AACDC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKT,KAAlC;;AACA,QAAI,KAAKA,KAAL,CAAWU,IAAf,EAAqB;AACnB,WAAKT,KAAL,CAAWC,KAAX,GAAmB,KAAKF,KAAL,CAAWU,IAA9B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKR,KAAL,CAAWC,KAApC;AACD,KALM,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM;AACJC,MAAAA,mBADI;AAEJC,MAAAA,YAFI;AAGJC,MAAAA;AAHI,QAIF,KAAKL,KAJT;AAKA,UAAMW,QAAQ,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqBF,IAAI,iBACxC,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,eACEP,mBAAmB,CAACO,IAAD,CAAnB,EACAL,qBAAqB,CAAC,OAAD,CAFvB;AAID,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGK,IATH,CADe,CAAjB;AAaA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,KAAK,MAAtB;AAAuB,MAAA,OAAO,MAA9B;AAA+B,MAAA,KAAK,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ,GADR,EAEGN,YAAY,CAACS,MAAb,GAAsB,CAAtB,GACG,KAAKZ,KAAL,CAAWG,YADd,GAEG,iBAJN,CADF,eAOE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBO,QAAhB,CAPF,CADF,CADF;AAaD;;AA5DkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nexport default class SizeSelection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sizes: [],\r\n      handleSizeSelection: \"\",\r\n      selectedSize: \"\",\r\n      validateSizeSelection: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // this.setState({ size: this.props.size });\r\n  }\r\n  render() {\r\n    console.log(\"props in size\", this.props);\r\n    if (this.props.size) {\r\n      this.state.sizes = this.props.size;\r\n      console.log(\"sizes are\", this.state.sizes);\r\n    }\r\n    // }\r\n    // if (this.props.handleSizeSelection) {\r\n    //   this.state.handleSizeSelection = this.props.handleSizeSelection;\r\n    // }\r\n    // if (this.props.selectedSize) {\r\n    //   this.state.selectedSize = this.props.selectedSize;\r\n    // }\r\n    // if (this.props.validateSizeSelection) {\r\n    //   this.state.validateSizeSelection = this.props.validateSizeSelection;\r\n    // }\r\n    const {\r\n      handleSizeSelection,\r\n      selectedSize,\r\n      validateSizeSelection\r\n    } = this.props;\r\n    const dropdown = this.state.sizes.map(size => (\r\n      <Dropdown.Item\r\n        key={size}\r\n        onClick={() => {\r\n          return (\r\n            handleSizeSelection(size),\r\n            validateSizeSelection(\"valid\")\r\n          );\r\n        }}\r\n      >\r\n        {size}\r\n      </Dropdown.Item>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Dropdown>\r\n          <Dropdown.Toggle caret outline color=\"secondary\">\r\n            Size:{\" \"}\r\n            {selectedSize.length > 0\r\n              ? this.state.selectedSize\r\n              : \"Click to choose\"}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>{dropdown}</Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}